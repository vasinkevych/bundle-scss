"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
const fs_utils_1 = require("./fs-utils");
const path_1 = require("path");
exports.removeImports = (content, fileType) => {
    const regex = fileType === 'scss' ? constants_1.mainConst.scssImportRegex : constants_1.mainConst.sassImportRegex;
    return content.replace(regex, '');
};
exports.getUniqueStyleFiles = (files, fileExtension) => {
    const imports = files
        .map(file => {
        let baseDir = path_1.dirname(file);
        return exports.getImports(fs_utils_1.readSync(file), baseDir, fileExtension);
    })
        .reduce((acc, curr) => acc.concat(curr), []);
    const allImports = [...imports, ...files];
    return [...new Set(allImports)];
};
exports.getImports = (content, baseDir, fileExtension, imports = []) => {
    const regex = fileExtension === 'scss' ? /@import ['"]([^'"]+)['"];/g : /@import (\S+)/g;
    let match;
    while ((match = regex.exec(content)) !== null) {
        const pathFile = fs_utils_1.defineExtension(path_1.join(baseDir, match[1]), fileExtension);
        imports.push(pathFile);
        exports.getImports(fs_utils_1.readSync(pathFile), path_1.dirname(pathFile), fileExtension, imports);
    }
    return imports;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1jb250ZW50LXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hlbHBlcnMvZmlsZS1jb250ZW50LXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQXdDO0FBQ3hDLHlDQUF1RDtBQUN2RCwrQkFBcUM7QUFFeEIsUUFBQSxhQUFhLEdBQUcsQ0FBQyxPQUFlLEVBQUUsUUFBZ0IsRUFBRSxFQUFFO0lBQ2pFLE1BQU0sS0FBSyxHQUNULFFBQVEsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLHFCQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxxQkFBUyxDQUFDLGVBQWUsQ0FBQztJQUM5RSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3BDLENBQUMsQ0FBQztBQUVXLFFBQUEsbUJBQW1CLEdBQUcsQ0FDakMsS0FBb0IsRUFDcEIsYUFBcUIsRUFDckIsRUFBRTtJQUNGLE1BQU0sT0FBTyxHQUFHLEtBQUs7U0FDbEIsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ1YsSUFBSSxPQUFPLEdBQUcsY0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLE9BQU8sa0JBQVUsQ0FBQyxtQkFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM1RCxDQUFDLENBQUM7U0FDRCxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBRyxPQUFPLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQztJQUUxQyxPQUFPLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLENBQUMsQ0FBQztBQUVXLFFBQUEsVUFBVSxHQUFHLENBQ3hCLE9BQWUsRUFDZixPQUFlLEVBQ2YsYUFBcUIsRUFDckIsVUFBeUIsRUFBRSxFQUMzQixFQUFFO0lBQ0YsTUFBTSxLQUFLLEdBQ1QsYUFBYSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO0lBQzdFLElBQUksS0FBSyxDQUFDO0lBQ1YsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQzdDLE1BQU0sUUFBUSxHQUFHLDBCQUFlLENBQUMsV0FBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUN6RSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3ZCLGtCQUFVLENBQUMsbUJBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxjQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQzNFO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFpbkNvbnN0IH0gZnJvbSAnLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgeyBkZWZpbmVFeHRlbnNpb24sIHJlYWRTeW5jIH0gZnJvbSAnLi9mcy11dGlscyc7XHJcbmltcG9ydCB7IGRpcm5hbWUsIGpvaW4gfSBmcm9tICdwYXRoJztcclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVJbXBvcnRzID0gKGNvbnRlbnQ6IHN0cmluZywgZmlsZVR5cGU6IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IHJlZ2V4ID1cclxuICAgIGZpbGVUeXBlID09PSAnc2NzcycgPyBtYWluQ29uc3Quc2Nzc0ltcG9ydFJlZ2V4IDogbWFpbkNvbnN0LnNhc3NJbXBvcnRSZWdleDtcclxuICByZXR1cm4gY29udGVudC5yZXBsYWNlKHJlZ2V4LCAnJyk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VW5pcXVlU3R5bGVGaWxlcyA9IChcclxuICBmaWxlczogQXJyYXk8c3RyaW5nPixcclxuICBmaWxlRXh0ZW5zaW9uOiBzdHJpbmdcclxuKSA9PiB7XHJcbiAgY29uc3QgaW1wb3J0cyA9IGZpbGVzXHJcbiAgICAubWFwKGZpbGUgPT4ge1xyXG4gICAgICBsZXQgYmFzZURpciA9IGRpcm5hbWUoZmlsZSk7XHJcbiAgICAgIHJldHVybiBnZXRJbXBvcnRzKHJlYWRTeW5jKGZpbGUpLCBiYXNlRGlyLCBmaWxlRXh0ZW5zaW9uKTtcclxuICAgIH0pXHJcbiAgICAucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYy5jb25jYXQoY3VyciksIFtdKTtcclxuICBjb25zdCBhbGxJbXBvcnRzID0gWy4uLmltcG9ydHMsIC4uLmZpbGVzXTtcclxuXHJcbiAgcmV0dXJuIFsuLi5uZXcgU2V0KGFsbEltcG9ydHMpXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRJbXBvcnRzID0gKFxyXG4gIGNvbnRlbnQ6IHN0cmluZyxcclxuICBiYXNlRGlyOiBzdHJpbmcsXHJcbiAgZmlsZUV4dGVuc2lvbjogc3RyaW5nLFxyXG4gIGltcG9ydHM6IEFycmF5PHN0cmluZz4gPSBbXVxyXG4pID0+IHtcclxuICBjb25zdCByZWdleCA9XHJcbiAgICBmaWxlRXh0ZW5zaW9uID09PSAnc2NzcycgPyAvQGltcG9ydCBbJ1wiXShbXidcIl0rKVsnXCJdOy9nIDogL0BpbXBvcnQgKFxcUyspL2c7XHJcbiAgbGV0IG1hdGNoO1xyXG4gIHdoaWxlICgobWF0Y2ggPSByZWdleC5leGVjKGNvbnRlbnQpKSAhPT0gbnVsbCkge1xyXG4gICAgY29uc3QgcGF0aEZpbGUgPSBkZWZpbmVFeHRlbnNpb24oam9pbihiYXNlRGlyLCBtYXRjaFsxXSksIGZpbGVFeHRlbnNpb24pO1xyXG4gICAgaW1wb3J0cy5wdXNoKHBhdGhGaWxlKTtcclxuICAgIGdldEltcG9ydHMocmVhZFN5bmMocGF0aEZpbGUpLCBkaXJuYW1lKHBhdGhGaWxlKSwgZmlsZUV4dGVuc2lvbiwgaW1wb3J0cyk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gaW1wb3J0cztcclxufTtcclxuIl19