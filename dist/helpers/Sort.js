"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Sort {
    constructor(pattern) {
        this.pattern = Array.isArray(pattern) ? pattern : [pattern];
        this.hash = this.pattern.reduce((acc, item, i) => {
            acc[item] = i;
            return acc;
        }, {});
    }
    comparator(a, b) {
        const aEl = this.pattern.find(el => a.includes(el));
        const bEl = this.pattern.find(el => b.includes(el));
        if (!(aEl in this.hash)) {
            // checks if name is not in the pattern
            return 1;
        }
        if (!(bEl in this.hash)) {
            // if true - place that names to the end
            return -1;
        }
        return this.hash[aEl] - this.hash[bEl];
    }
    sort(sortable) {
        return sortable.sort(this.comparator.bind(this));
    }
}
exports.Sort = Sort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU29ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL1NvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUlFLFlBQVksT0FBK0I7UUFDekMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FDN0IsQ0FBQyxHQUFVLEVBQUUsSUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzlCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDZCxNQUFNLENBQUMsR0FBWSxDQUFDO1FBQ3RCLENBQUMsRUFDRCxFQUFXLENBQ1osQ0FBQztJQUNKLENBQUM7SUFFTyxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDckMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEQsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLHVDQUF1QztZQUN2QyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ1gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4Qix3Q0FBd0M7WUFDeEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1osQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVNLElBQUksQ0FBQyxRQUF1QjtRQUNqQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Q0FDRjtBQWhDRCxvQkFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJSGFzaCB9IGZyb20gJy4uL2ludGVyZmFjZS9JSGFzaCc7XHJcblxyXG5leHBvcnQgY2xhc3MgU29ydCB7XHJcbiAgcHVibGljIHBhdHRlcm46IEFycmF5PHN0cmluZz47XHJcbiAgcHVibGljIGhhc2g6IGFueTtcclxuXHJcbiAgY29uc3RydWN0b3IocGF0dGVybjogQXJyYXk8c3RyaW5nPiB8IHN0cmluZykge1xyXG4gICAgdGhpcy5wYXR0ZXJuID0gQXJyYXkuaXNBcnJheShwYXR0ZXJuKSA/IHBhdHRlcm4gOiBbcGF0dGVybl07XHJcbiAgICB0aGlzLmhhc2ggPSB0aGlzLnBhdHRlcm4ucmVkdWNlKFxyXG4gICAgICAoYWNjOiBJSGFzaCwgaXRlbTogc3RyaW5nLCBpKSA9PiB7XHJcbiAgICAgICAgYWNjW2l0ZW1dID0gaTtcclxuICAgICAgICByZXR1cm4gYWNjIGFzIElIYXNoO1xyXG4gICAgICB9LFxyXG4gICAgICB7fSBhcyBJSGFzaFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY29tcGFyYXRvcihhOiBzdHJpbmcsIGI6IHN0cmluZykge1xyXG4gICAgY29uc3QgYUVsID0gdGhpcy5wYXR0ZXJuLmZpbmQoZWwgPT4gYS5pbmNsdWRlcyhlbCkpO1xyXG4gICAgY29uc3QgYkVsID0gdGhpcy5wYXR0ZXJuLmZpbmQoZWwgPT4gYi5pbmNsdWRlcyhlbCkpO1xyXG4gICAgaWYgKCEoYUVsIGluIHRoaXMuaGFzaCkpIHtcclxuICAgICAgLy8gY2hlY2tzIGlmIG5hbWUgaXMgbm90IGluIHRoZSBwYXR0ZXJuXHJcbiAgICAgIHJldHVybiAxO1xyXG4gICAgfVxyXG4gICAgaWYgKCEoYkVsIGluIHRoaXMuaGFzaCkpIHtcclxuICAgICAgLy8gaWYgdHJ1ZSAtIHBsYWNlIHRoYXQgbmFtZXMgdG8gdGhlIGVuZFxyXG4gICAgICByZXR1cm4gLTE7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5oYXNoW2FFbF0gLSB0aGlzLmhhc2hbYkVsXTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzb3J0KHNvcnRhYmxlOiBBcnJheTxzdHJpbmc+KTogQXJyYXk8c3RyaW5nPiB7XHJcbiAgICByZXR1cm4gc29ydGFibGUuc29ydCh0aGlzLmNvbXBhcmF0b3IuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==