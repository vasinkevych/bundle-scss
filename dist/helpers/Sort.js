"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sort = void 0;
class Sort {
    constructor(pattern) {
        this.pattern = Array.isArray(pattern) ? pattern : [pattern];
        this.hash = this.pattern.reduce((acc, item, i) => {
            acc[item] = i;
            return acc;
        }, {});
    }
    comparator(a, b) {
        const aEl = this.pattern.find((el) => a.includes(el));
        const bEl = this.pattern.find((el) => b.includes(el));
        if (!(aEl in this.hash)) {
            // checks if name is not in the pattern
            return 1;
        }
        if (!(bEl in this.hash)) {
            // if true - place that names to the end
            return -1;
        }
        return this.hash[aEl] - this.hash[bEl];
    }
    sort(sortable) {
        return sortable.sort(this.comparator.bind(this));
    }
}
exports.Sort = Sort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU29ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL1NvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsTUFBYSxJQUFJO0lBSWYsWUFBWSxPQUErQjtRQUN6QyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBVSxFQUFFLElBQVksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5RCxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2QsT0FBTyxHQUFZLENBQUM7UUFDdEIsQ0FBQyxFQUFFLEVBQVcsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFTyxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDckMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0RCxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsdUNBQXVDO1lBQ3ZDLE9BQU8sQ0FBQyxDQUFDO1NBQ1Y7UUFDRCxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3ZCLHdDQUF3QztZQUN4QyxPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ1g7UUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRU0sSUFBSSxDQUFDLFFBQXVCO1FBQ2pDLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Q0FDRjtBQTdCRCxvQkE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJSGFzaCB9IGZyb20gJy4uL2ludGVyZmFjZS9JSGFzaCc7XG5cbmV4cG9ydCBjbGFzcyBTb3J0IHtcbiAgcHVibGljIHBhdHRlcm46IEFycmF5PHN0cmluZz47XG4gIHB1YmxpYyBoYXNoOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocGF0dGVybjogQXJyYXk8c3RyaW5nPiB8IHN0cmluZykge1xuICAgIHRoaXMucGF0dGVybiA9IEFycmF5LmlzQXJyYXkocGF0dGVybikgPyBwYXR0ZXJuIDogW3BhdHRlcm5dO1xuICAgIHRoaXMuaGFzaCA9IHRoaXMucGF0dGVybi5yZWR1Y2UoKGFjYzogSUhhc2gsIGl0ZW06IHN0cmluZywgaSkgPT4ge1xuICAgICAgYWNjW2l0ZW1dID0gaTtcbiAgICAgIHJldHVybiBhY2MgYXMgSUhhc2g7XG4gICAgfSwge30gYXMgSUhhc2gpO1xuICB9XG5cbiAgcHJpdmF0ZSBjb21wYXJhdG9yKGE6IHN0cmluZywgYjogc3RyaW5nKSB7XG4gICAgY29uc3QgYUVsID0gdGhpcy5wYXR0ZXJuLmZpbmQoKGVsKSA9PiBhLmluY2x1ZGVzKGVsKSk7XG4gICAgY29uc3QgYkVsID0gdGhpcy5wYXR0ZXJuLmZpbmQoKGVsKSA9PiBiLmluY2x1ZGVzKGVsKSk7XG4gICAgaWYgKCEoYUVsIGluIHRoaXMuaGFzaCkpIHtcbiAgICAgIC8vIGNoZWNrcyBpZiBuYW1lIGlzIG5vdCBpbiB0aGUgcGF0dGVyblxuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIGlmICghKGJFbCBpbiB0aGlzLmhhc2gpKSB7XG4gICAgICAvLyBpZiB0cnVlIC0gcGxhY2UgdGhhdCBuYW1lcyB0byB0aGUgZW5kXG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmhhc2hbYUVsXSAtIHRoaXMuaGFzaFtiRWxdO1xuICB9XG5cbiAgcHVibGljIHNvcnQoc29ydGFibGU6IEFycmF5PHN0cmluZz4pOiBBcnJheTxzdHJpbmc+IHtcbiAgICByZXR1cm4gc29ydGFibGUuc29ydCh0aGlzLmNvbXBhcmF0b3IuYmluZCh0aGlzKSk7XG4gIH1cbn1cbiJdfQ==