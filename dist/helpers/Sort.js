"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Sort {
    constructor(pattern) {
        this.pattern = Array.isArray(pattern) ? pattern : [pattern];
        this.hash = this.pattern.reduce((acc, item, i) => {
            acc[item] = i;
            return acc;
        }, {});
    }
    comparator(a, b) {
        const aEl = this.pattern.find(el => a.includes(el));
        const bEl = this.pattern.find(el => b.includes(el));
        if (!(aEl in this.hash)) {
            // checks if name is not in the pattern
            return 1;
        }
        if (!(bEl in this.hash)) {
            // if true - place that names to the end
            return -1;
        }
        return this.hash[aEl] - this.hash[bEl];
    }
    sort(sortable) {
        return sortable.sort(this.comparator.bind(this));
    }
}
exports.Sort = Sort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU29ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL1NvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUlFLFlBQVksT0FBK0I7UUFDekMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FDN0IsQ0FBQyxHQUFVLEVBQUUsSUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzlCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDZCxNQUFNLENBQUMsR0FBWSxDQUFDO1FBQ3RCLENBQUMsRUFDRCxFQUFXLENBQ1osQ0FBQztJQUNKLENBQUM7SUFFTyxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDckMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEQsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLHVDQUF1QztZQUN2QyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ1gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4Qix3Q0FBd0M7WUFDeEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1osQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVNLElBQUksQ0FBQyxRQUF1QjtRQUNqQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Q0FDRjtBQWhDRCxvQkFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJSGFzaCB9IGZyb20gXCIuLi9pbnRlcmZhY2UvSUhhc2hcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTb3J0IHtcclxuICBwdWJsaWMgcGF0dGVybjogQXJyYXk8c3RyaW5nPjtcclxuICBwdWJsaWMgaGFzaDogYW55O1xyXG5cclxuICBjb25zdHJ1Y3RvcihwYXR0ZXJuOiBBcnJheTxzdHJpbmc+IHwgc3RyaW5nKSB7XHJcbiAgICB0aGlzLnBhdHRlcm4gPSBBcnJheS5pc0FycmF5KHBhdHRlcm4pID8gcGF0dGVybiA6IFtwYXR0ZXJuXTtcclxuICAgIHRoaXMuaGFzaCA9IHRoaXMucGF0dGVybi5yZWR1Y2UoXHJcbiAgICAgIChhY2M6IElIYXNoLCBpdGVtOiBzdHJpbmcsIGkpID0+IHtcclxuICAgICAgICBhY2NbaXRlbV0gPSBpO1xyXG4gICAgICAgIHJldHVybiBhY2MgYXMgSUhhc2g7XHJcbiAgICAgIH0sXHJcbiAgICAgIHt9IGFzIElIYXNoXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjb21wYXJhdG9yKGE6IHN0cmluZywgYjogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBhRWwgPSB0aGlzLnBhdHRlcm4uZmluZChlbCA9PiBhLmluY2x1ZGVzKGVsKSk7XHJcbiAgICBjb25zdCBiRWwgPSB0aGlzLnBhdHRlcm4uZmluZChlbCA9PiBiLmluY2x1ZGVzKGVsKSk7XHJcbiAgICBpZiAoIShhRWwgaW4gdGhpcy5oYXNoKSkge1xyXG4gICAgICAvLyBjaGVja3MgaWYgbmFtZSBpcyBub3QgaW4gdGhlIHBhdHRlcm5cclxuICAgICAgcmV0dXJuIDE7XHJcbiAgICB9XHJcbiAgICBpZiAoIShiRWwgaW4gdGhpcy5oYXNoKSkge1xyXG4gICAgICAvLyBpZiB0cnVlIC0gcGxhY2UgdGhhdCBuYW1lcyB0byB0aGUgZW5kXHJcbiAgICAgIHJldHVybiAtMTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLmhhc2hbYUVsXSAtIHRoaXMuaGFzaFtiRWxdO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNvcnQoc29ydGFibGU6IEFycmF5PHN0cmluZz4pOiBBcnJheTxzdHJpbmc+IHtcclxuICAgIHJldHVybiBzb3J0YWJsZS5zb3J0KHRoaXMuY29tcGFyYXRvci5iaW5kKHRoaXMpKTtcclxuICB9XHJcbn1cclxuIl19