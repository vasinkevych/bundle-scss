#!/usr/bin/env node
'use strict';
const app = require('commander');
const cfg = require('../../package.json');
const bundleScss = require('../index');
app
    .version(cfg.version)
    .option('-d, --dest <dest>', 'destination of bundled file')
    .option('-m, --mask <mask>', 'mask for files like ./src/**/*.theme.scss')
    .option('-s, --sort <sort>', `Optional. Sort priority for files.
    Example: 'variable' - will pass all variables at beginning.
    Default priority ['theme-variable', 'variable', 'mixin']`)
    .option('-c, --config', 'true or false, try to get params from package.json or bundle-style.json')
    .parse(process.argv);
if ((app.mask && app.dest) || app.config) {
    bundleScss(app.mask, app.dest, app.sort, app.config);
}
else {
    throw new Error('Please check options: -m, -d. \nLooks like some of them are not specified');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLXNjc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYmluL2J1bmRsZS1zY3NzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxZQUFZLENBQUM7QUFFYixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDakMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDMUMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRXZDLEdBQUc7S0FDQSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQztLQUNwQixNQUFNLENBQUMsbUJBQW1CLEVBQUUsNkJBQTZCLENBQUM7S0FDMUQsTUFBTSxDQUFDLG1CQUFtQixFQUFFLDJDQUEyQyxDQUFDO0tBQ3hFLE1BQU0sQ0FDTCxtQkFBbUIsRUFDbkI7OzZEQUV5RCxDQUMxRDtLQUNBLE1BQU0sQ0FDTCxjQUFjLEVBQ2QseUVBQXlFLENBQzFFO0tBQ0EsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUV2QixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtJQUN4QyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0NBQ3REO0tBQU07SUFDTCxNQUFNLElBQUksS0FBSyxDQUNiLDJFQUEyRSxDQUM1RSxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBhcHAgPSByZXF1aXJlKCdjb21tYW5kZXInKTtcclxuY29uc3QgY2ZnID0gcmVxdWlyZSgnLi4vLi4vcGFja2FnZS5qc29uJyk7XHJcbmNvbnN0IGJ1bmRsZVNjc3MgPSByZXF1aXJlKCcuLi9pbmRleCcpO1xyXG5cclxuYXBwXHJcbiAgLnZlcnNpb24oY2ZnLnZlcnNpb24pXHJcbiAgLm9wdGlvbignLWQsIC0tZGVzdCA8ZGVzdD4nLCAnZGVzdGluYXRpb24gb2YgYnVuZGxlZCBmaWxlJylcclxuICAub3B0aW9uKCctbSwgLS1tYXNrIDxtYXNrPicsICdtYXNrIGZvciBmaWxlcyBsaWtlIC4vc3JjLyoqLyoudGhlbWUuc2NzcycpXHJcbiAgLm9wdGlvbihcclxuICAgICctcywgLS1zb3J0IDxzb3J0PicsXHJcbiAgICBgT3B0aW9uYWwuIFNvcnQgcHJpb3JpdHkgZm9yIGZpbGVzLlxyXG4gICAgRXhhbXBsZTogJ3ZhcmlhYmxlJyAtIHdpbGwgcGFzcyBhbGwgdmFyaWFibGVzIGF0IGJlZ2lubmluZy5cclxuICAgIERlZmF1bHQgcHJpb3JpdHkgWyd0aGVtZS12YXJpYWJsZScsICd2YXJpYWJsZScsICdtaXhpbiddYFxyXG4gIClcclxuICAub3B0aW9uKFxyXG4gICAgJy1jLCAtLWNvbmZpZycsXHJcbiAgICAndHJ1ZSBvciBmYWxzZSwgdHJ5IHRvIGdldCBwYXJhbXMgZnJvbSBwYWNrYWdlLmpzb24gb3IgYnVuZGxlLXN0eWxlLmpzb24nXHJcbiAgKVxyXG4gIC5wYXJzZShwcm9jZXNzLmFyZ3YpO1xyXG5cclxuaWYgKChhcHAubWFzayAmJiBhcHAuZGVzdCkgfHwgYXBwLmNvbmZpZykge1xyXG4gIGJ1bmRsZVNjc3MoYXBwLm1hc2ssIGFwcC5kZXN0LCBhcHAuc29ydCwgYXBwLmNvbmZpZyk7XHJcbn0gZWxzZSB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgJ1BsZWFzZSBjaGVjayBvcHRpb25zOiAtbSwgLWQuIFxcbkxvb2tzIGxpa2Ugc29tZSBvZiB0aGVtIGFyZSBub3Qgc3BlY2lmaWVkJ1xyXG4gICk7XHJcbn1cclxuIl19