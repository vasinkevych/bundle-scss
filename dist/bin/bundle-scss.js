#!/usr/bin/env node
'use strict';
const program = require('commander');
const cfg = require('../../package.json');
const bundleScss = require('../index');
program
    .version(cfg.version)
    .option('-d, --dest <dest>', 'destination of bundled file')
    .option('-m, --mask <mask>', 'mask for files like ./src/**/*.theme.scss')
    .option('-s, --sort <sort>', `Optional. Sort priority for files.
    Example: 'variable' - will pass all variables at beginning.
    Default priority ['theme-variable', 'variable', 'mixin']`)
    .option('-c, --config', 'true or false, try to get params from package.json or bundle-style.json')
    .parse(process.argv);
const app = program.opts();
console.log(app);
if ((app.mask && app.dest) || app.config) {
    bundleScss(app.mask, app.dest, app.sort, app.config);
}
else {
    throw new Error('Please check options: -m, -d. \nLooks like some of them are not specified');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLXNjc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYmluL2J1bmRsZS1zY3NzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxZQUFZLENBQUM7QUFFYixNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDckMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDMUMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRXZDLE9BQU87S0FDSixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQztLQUNwQixNQUFNLENBQUMsbUJBQW1CLEVBQUUsNkJBQTZCLENBQUM7S0FDMUQsTUFBTSxDQUFDLG1CQUFtQixFQUFFLDJDQUEyQyxDQUFDO0tBQ3hFLE1BQU0sQ0FDTCxtQkFBbUIsRUFDbkI7OzZEQUV5RCxDQUMxRDtLQUNBLE1BQU0sQ0FDTCxjQUFjLEVBQ2QseUVBQXlFLENBQzFFO0tBQ0EsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUV2QixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7QUFFM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUVqQixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtJQUN4QyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0NBQ3REO0tBQU07SUFDTCxNQUFNLElBQUksS0FBSyxDQUNiLDJFQUEyRSxDQUM1RSxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3QgY2ZnID0gcmVxdWlyZSgnLi4vLi4vcGFja2FnZS5qc29uJyk7XG5jb25zdCBidW5kbGVTY3NzID0gcmVxdWlyZSgnLi4vaW5kZXgnKTtcblxucHJvZ3JhbVxuICAudmVyc2lvbihjZmcudmVyc2lvbilcbiAgLm9wdGlvbignLWQsIC0tZGVzdCA8ZGVzdD4nLCAnZGVzdGluYXRpb24gb2YgYnVuZGxlZCBmaWxlJylcbiAgLm9wdGlvbignLW0sIC0tbWFzayA8bWFzaz4nLCAnbWFzayBmb3IgZmlsZXMgbGlrZSAuL3NyYy8qKi8qLnRoZW1lLnNjc3MnKVxuICAub3B0aW9uKFxuICAgICctcywgLS1zb3J0IDxzb3J0PicsXG4gICAgYE9wdGlvbmFsLiBTb3J0IHByaW9yaXR5IGZvciBmaWxlcy5cbiAgICBFeGFtcGxlOiAndmFyaWFibGUnIC0gd2lsbCBwYXNzIGFsbCB2YXJpYWJsZXMgYXQgYmVnaW5uaW5nLlxuICAgIERlZmF1bHQgcHJpb3JpdHkgWyd0aGVtZS12YXJpYWJsZScsICd2YXJpYWJsZScsICdtaXhpbiddYFxuICApXG4gIC5vcHRpb24oXG4gICAgJy1jLCAtLWNvbmZpZycsXG4gICAgJ3RydWUgb3IgZmFsc2UsIHRyeSB0byBnZXQgcGFyYW1zIGZyb20gcGFja2FnZS5qc29uIG9yIGJ1bmRsZS1zdHlsZS5qc29uJ1xuICApXG4gIC5wYXJzZShwcm9jZXNzLmFyZ3YpO1xuXG5jb25zdCBhcHAgPSBwcm9ncmFtLm9wdHMoKTtcblxuY29uc29sZS5sb2coYXBwKTtcblxuaWYgKChhcHAubWFzayAmJiBhcHAuZGVzdCkgfHwgYXBwLmNvbmZpZykge1xuICBidW5kbGVTY3NzKGFwcC5tYXNrLCBhcHAuZGVzdCwgYXBwLnNvcnQsIGFwcC5jb25maWcpO1xufSBlbHNlIHtcbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgICdQbGVhc2UgY2hlY2sgb3B0aW9uczogLW0sIC1kLiBcXG5Mb29rcyBsaWtlIHNvbWUgb2YgdGhlbSBhcmUgbm90IHNwZWNpZmllZCdcbiAgKTtcbn1cbiJdfQ==